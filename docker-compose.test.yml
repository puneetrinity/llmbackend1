version: '3.8'

services:
  # Test database (lightweight)
  test-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test Redis
  test-redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Main application for testing
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://testuser:testpass@test-db:5432/testdb
      - REDIS_URL=redis://test-redis:6379
      - DEBUG=true
      - BRAVE_SEARCH_API_KEY=test_key
      - SERPAPI_API_KEY=test_key
      - ZENROWS_API_KEY=test_key
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Integration tests
  integration-tests:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - DATABASE_URL=postgresql+asyncpg://testuser:testpass@test-db:5432/testdb
      - REDIS_URL=redis://test-redis:6379
      - API_BASE_URL=http://app:8000
    depends_on:
      app:
        condition: service_healthy
    command: pytest tests/integration/ -v --tb=short
    volumes:
      - ./tests:/app/tests
      - ./test-results:/app/test-results

networks:
  default:
    name: test-network
