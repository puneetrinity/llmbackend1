- name: Clean and fix Bandit SARIF file
  run: |
    python -c "
import json

def clean_dict(obj):
    if isinstance(obj, dict):
        return {k: clean_dict(v) for k, v in obj.items() if k != ''}
    elif isinstance(obj, list):
        return [clean_dict(i) for i in obj]
    else:
        return obj

try:
    with open('bandit-results.sarif', 'r') as f:
        data = json.load(f)

    data = clean_dict(data)

    data.setdefault('version', '2.1.0')
    data.setdefault('$schema', 'https://json.schemastore.org/sarif-2.1.0.json')

    if 'runs' in data:
        for run in data['runs']:
            if 'tool' not in run:
                run['tool'] = {
                    'driver': {
                        'name': 'Bandit',
                        'version': '1.8.3',
                        'informationUri': 'https://bandit.readthedocs.io/'
                    }
                }

    with open('bandit-results.sarif', 'w') as f:
        json.dump(data, f, indent=2)
    print('✅ Cleaned SARIF and saved.')
except Exception as e:
    print(f'⚠️ SARIF cleaning failed: {e}')
    with open('bandit-results.sarif', 'w') as f:
        json.dump({
            'version': '2.1.0',
            '$schema': 'https://json.schemastore.org/sarif-2.1.0.json',
            'runs': [{
                'tool': {
                    'driver': {
                        'name': 'Bandit',
                        'version': '1.8.3'
                    }
                },
                'results': []
            }]
        }, f, indent=2)
    print('✅ Wrote fallback SARIF.")
